<launch>

<!-- SET UP STATIC TRANSFORMS -->
<arg name="optical_rotate" value="0 0 0.35 0 0 -2" />
<node pkg="tf" type="static_transform_publisher" name="map" args="$(arg optical_rotate) map usb_cam 100" /> 

<!-- RUN USB CAM -->
<node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video1" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="mjpeg" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap" />
    <param name="camera_info_url" value="file:///home/andrea/.ros/camera_info/head_camera.yaml" />
</node>

<!-- VISUALIZE USB CAM -->
<node name="usb_cam_image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/usb_cam/image_raw"/>
    <param name="autosize" value="true" />
</node>

<!-- TRACK AR TAG BUNDLES RELATIVE TO MASTER TAG ON TOP OF ROBOT -->
<arg name="bundle_markers" value="ar_marker_0 ar_marker_1 ar_marker_2 ar_marker_3 ar_marker_4" />
<include ns="usb_cam" file="$(find experiment_calib)/launch/ar_track.launch">
    <arg name="camera" value="/usb_cam" />
</include>
<node name="filter" pkg="experiment_calib" type="filter_pose.py" args="usb_cam $(arg bundle_markers)" />
<node name="tracker" pkg="experiment_calib" type="track_bundle.py" args="usb_cam $(find experiment_calib)/data/roach_hat_calib_NEW.bag" output="screen" />

<!-- GENERATE POINT CLOUD FROM AR TAGS -->
<!-- NOTE: if pcd_file is NULL, then pcd file will not be saved. Put full path to pcd file if you want to save it. -->
<arg name="pcd_file" default="NULL"/>			
<arg name="cloud_width" default="15000" /> 
<arg name="resolution" default="0.005" /> 
<node name="pt_cloud" pkg="coop_pcl" type="cloud_goal_pub" output="screen" args="$(arg pcd_file) $(arg resolution) $(arg cloud_width)" />

<!-- PUBLISH TWIST MESSAGE FOR ROBOT WALK -->
<arg name="robot_name" default="robot0"/>		
<node name="controller" pkg="coop_pcl" type="roach_control_pub" output="screen" args="$(arg robot_name)" /> 

<!-- CONTROL VELOCIROACH -->
<node pkg="man_joy_override" name="roach_bridge" type="roach_bridge.py" output="screen" /> 

<!-- RUN RVIZ -->
<node name="rviz" pkg="rviz" type="rviz" />

</launch>
